Based on the following description of an inconsistency
suggest graph repairs to fix it:
---

        MATCH (p:Patient)-[rm:TAKES_MEDICATION]->(m:Medication)-[rc:HAS_INGREDIENT]->(i:Ingredient),
            (p)-[ra:ALLERGIC_TO]->(i)
        RETURN *
        1. There is a node labeled as 'Ingredient' with the ID 'oxycodone'.
  2. There is another node labeled as 'Medication' with the code '205923' and description '1 ML Epogen 4000 UNT/ML Injection'.
  3. A third node represents a patient, identified by '3f336702-bf73-4fc8-bd59-3ba77fd65d0d', with the first name 'Sanford861' and last name 'Fritsch593'. The patient's birthdate is '1923-06-22', address is '935 Rempel Trail', and they have no known allergies or death date.
  4. The medication with the code '205923' has 'oxycodone' as an ingredient.
  5. The patient with ID '3f336702-bf73-4fc8-bd59-3ba77fd65d0d' is allergic to no known substances.
  6. The patient with ID '3f336702-bf73-4fc8-bd59-3ba77fd65d0d' takes the medication with code '205923'. They started taking this medication on '2016-01-01T09:55:43Z' and are still taking it as of now.
---

OUTPUT FORMAT:

Provide suggested repairs in the following structured format:

<repairs> {op_code} | {target} | {details} </repairs>

where:
- {op_code} is one of (`ADD_NODE`, `ADD_EDGE`, `DEL_EDGE`, `UPD_NODE`, `UPD_EDGE`)
- {target} specifies the affected node or relationship variable
- {details} contains relevant property changes (key-value) or `-` if none

Do NOT add explanations beyond the descriptions in the output.


EXAMPLE OUTPUT #1: (e.g., if the allergy information is incorrect)
<repairs>
DEL_EDGE | [rm] | -
</repairs>

EXAMPLE OUTPUT #2: (e.g., if the ingredient information is incorrect)
<repairs>
DEL_EDGE | [rc] | -
</repairs>
