Based on the following description of an inconsistency
suggest graph repairs to fix it:
---

        MATCH (p:Patient)-[rm:TAKES_MEDICATION]->(m:Medication)-[rc:HAS_INGREDIENT]->(i:Ingredient),
            (p)-[ra:ALLERGIC_TO]->(i)
        RETURN *
         There is a node labeled as 'Ingredient' with the ID 'oxycodone'. It has a property 'tau_o' set to 1.
   There is another node labeled as 'Medication', with the code '205923' and description '1 ML Epogen 4000 UNT/ML Injection'. Its ID is also 'oxycodone'. It has a property 'tau_o' set to 1.
   There is a node labeled as 'Patient' with the ID 'cae10920-f977-48b4-a0d3-4d70ad561fd1'. This node has properties such as 'address', 'birthdate', 'last', 'first', 'deathdate', and 'id'.
   The 'Ingredient' node is connected to the 'Medication' node via an edge with type 'HAS_INGREDIENT'. This edge also has a property 'tau_o' set to 1, and an error flag 'is_error' set to '1'.
   The 'Patient' node is connected to both the 'Ingredient' and 'Medication' nodes via edges. One of these edges has type 'ALLERGIC_TO', with properties including 'tau_o' set to 0, and an error flag 'is_error' set to '0'. The other edge has type 'TAKES_MEDICATION', with properties such as 'start' and 'stop' dates.
---

OUTPUT FORMAT:

Provide suggested repairs in the following structured format:

<repairs> {op_code} | {target} | {details} </repairs>

where:
- {op_code} is one of (`ADD_NODE`, `ADD_EDGE`, `DEL_EDGE`, `UPD_NODE`, `UPD_EDGE`)
- {target} specifies the affected node or relationship variable
- {details} contains relevant property changes (key-value) or `-` if none

Do NOT add explanations beyond the descriptions in the output.


EXAMPLE OUTPUT #1: (e.g., if the allergy information is incorrect)
<repairs>
DEL_EDGE | [rm] | -
</repairs>

EXAMPLE OUTPUT #2: (e.g., if the ingredient information is incorrect)
<repairs>
DEL_EDGE | [rc] | -
</repairs>
