Based on the following description of an inconsistency
suggest graph repairs to fix it:
---

        MATCH (p:Patient)-[rm:TAKES_MEDICATION]->(m:Medication)-[rc:HAS_INGREDIENT]->(i:Ingredient),
            (p)-[ra:ALLERGIC_TO]->(i)
        RETURN *
        1. There is a node labeled as Ingredient with the ID 'oxycodone'. It has a property 'tau_o' set to 1.
  2. There is another node labeled as Medication, with the code '205923' and description '1 ML Epogen 4000 UNT/ML Injection'. This node also has a property 'tau_o' set to 1.
  3. There is a third node labeled as Patient, identified by '3f336702-bf73-4fc8-bd59-3ba77fd65d0d'. This patient's details include the name 'Sanford861', birthdate '1923-06-22', and address '935 Rempel Trail'.
  4. The Ingredient node is connected to the Medication node through an edge of type HAS_INGREDIENT, with a property 'tau_o' set to 1 and an error flag 'is_error' set to '1'.
  5. The Patient node is connected to both the Ingredient and Medication nodes. There is an edge between the Patient and Ingredient node of type ALLERGIC_TO, with properties 'tau_o' set to 0 and 'is_error' set to '0'.
  6. Another edge connects the Patient node to the Medication node, of type TAKES_MEDICATION, with properties 'start' and 'stop' both set to '2016-04-24T09:55:43Z', 'tau_o' set to 0. The error flag 'is_error' is set to '0'.
---

OUTPUT FORMAT:

Provide suggested repairs in the following structured format:

<repairs> {op_code} | {target} | {details} </repairs>

where:
- {op_code} is one of (`ADD_NODE`, `ADD_EDGE`, `DEL_EDGE`, `UPD_NODE`, `UPD_EDGE`)
- {target} specifies the affected node or relationship variable
- {details} contains relevant property changes (key-value) or `-` if none

Do NOT add explanations beyond the descriptions in the output.


EXAMPLE OUTPUT #1: (e.g., if the allergy information is incorrect)
<repairs>
DEL_EDGE | [rm] | -
</repairs>

EXAMPLE OUTPUT #2: (e.g., if the ingredient information is incorrect)
<repairs>
DEL_EDGE | [rc] | -
</repairs>
