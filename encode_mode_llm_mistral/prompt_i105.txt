Based on the following description of an inconsistency
suggest graph repairs to fix it:
---

        MATCH (p:Patient)-[rm:TAKES_MEDICATION]->(m:Medication)-[rc:HAS_INGREDIENT]->(i:Ingredient),
            (p)-[ra:ALLERGIC_TO]->(i)
        RETURN *
         There is a node labeled as 'Ingredient' with ID 'oxycodone'.
   There is another node labeled as 'Medication' with code '205923' and description '1 ML Epogen 4000 UNT/ML Injection'.
   A third node represents a patient with the first name Sanford861, last name Fritsch593, birthdate '1923-06-22', address '935 Rempel Trail', and no deathdate. This patient takes the medication with code '205923'.
   The ingredient 'oxycodone' is an ingredient of the medication with code '205923'.
   The patient with ID '3f336702-bf73-4fc8-bd59-3ba77fd65d0d' is allergic to something, but no specific allergy is specified.
   The patient with ID '3f336702-bf73-4fc8-bd59-3ba77fd65d0d' takes the medication with code '205923', starting from '2020-01-10T09:55:43Z'.
---

OUTPUT FORMAT:

Provide suggested repairs in the following structured format:

<repairs> {op_code} | {target} | {details} </repairs>

where:
- {op_code} is one of (`ADD_NODE`, `ADD_EDGE`, `DEL_EDGE`, `UPD_NODE`, `UPD_EDGE`)
- {target} specifies the affected node or relationship variable
- {details} contains relevant property changes (key-value) or `-` if none

Do NOT add explanations beyond the descriptions in the output.


EXAMPLE OUTPUT #1: (e.g., if the allergy information is incorrect)
<repairs>
DEL_EDGE | [rm] | -
</repairs>

EXAMPLE OUTPUT #2: (e.g., if the ingredient information is incorrect)
<repairs>
DEL_EDGE | [rc] | -
</repairs>
