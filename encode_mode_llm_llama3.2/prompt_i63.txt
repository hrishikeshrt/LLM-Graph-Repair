Based on the following description of an inconsistency
suggest graph repairs to fix it:
---

        MATCH (p:Patient)-[rm:TAKES_MEDICATION]->(m:Medication)-[rc:HAS_INGREDIENT]->(i:Ingredient),
            (p)-[ra:ALLERGIC_TO]->(i)
        RETURN *
        The graph represents a patient's information. The patient is identified as [3f336702-bf73-4fc8-bd59-3ba77fd65d0d] and has an address at [935 Rempel Trail]. The patient was born on June 22, 1923.

A medication, [860975], which is a 24 HR Glucophage 500 MG Extended Release Oral Tablet, is prescribed to the patient. The medication is administered orally and has a code of '860975'.

The patient has an ingredient, [ferrous sulfate], that is associated with the medication. This ingredient is linked to the medication through a relationship labeled as "HAS_INGREDIENT".

Additionally, there is an allergic relationship between the patient and the ingredient, indicating that the patient is allergic to ferrous sulfate.

Lastly, it is noted that the patient takes the medication regularly, starting from June 28, 1985, and stopping on August 30, 1985.
---

OUTPUT FORMAT:

Provide suggested repairs in the following structured format:

<repairs> {op_code} | {target} | {details} </repairs>

where:
- {op_code} is one of (`ADD_NODE`, `ADD_EDGE`, `DEL_EDGE`, `UPD_NODE`, `UPD_EDGE`)
- {target} specifies the affected node or relationship variable
- {details} contains relevant property changes (key-value) or `-` if none

Do NOT add explanations beyond the descriptions in the output.


EXAMPLE OUTPUT #1: (e.g., if the allergy information is incorrect)
<repairs>
DEL_EDGE | [rm] | -
</repairs>

EXAMPLE OUTPUT #2: (e.g., if the ingredient information is incorrect)
<repairs>
DEL_EDGE | [rc] | -
</repairs>
